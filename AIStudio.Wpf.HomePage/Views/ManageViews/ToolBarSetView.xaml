<util:BaseDialog x:Class="AIStudio.Wpf.HomePage.Views.ToolBarSetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:util="https://astudio.github.io/utilcontrol"
             xmlns:svg="clr-namespace:Svg2XamlTestExtension;assembly=Svg2XamlTestExtension"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:local="clr-namespace:AIStudio.Wpf.HomePage.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/AIStudio.Wpf.HomePage;component/Resources/MainViewResource.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <util:DoubleToThickness x:Key="DoubleToThickness"/>
            <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="HorizontalContentAlignment"
                        Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment"
                        Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" BorderBrush="Transparent">
                                    <ContentPresenter
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true" />
                                        <Condition Property="Selector.IsSelectionActive" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                            Value="{DynamicResource TitleBackgroundBrush}" />                                 
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border Background="{DynamicResource MahApps.Brushes.ThemeBackground}"  CornerRadius="3">
        <Grid Width="450" Margin="5,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0"
                   Margin="10,0"
                   Text="工具栏配置"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"/>
            <Grid Grid.Row="1" Height="280">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="180"/>
                </Grid.ColumnDefinitions>
                <TreeView x:Name="treeview" ItemsSource="{Binding MenuItems}" Style="{StaticResource DefaultMetroTreeView}" ItemTemplate="{StaticResource HamburgerMenuImageItem}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DoubleClickAddDataCommand}" CommandParameter="{Binding SelectedItem, ElementName=treeview}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TreeView>
                <ListBox x:Name="listBox" 
                         Margin="5,0" 
                         Grid.Column="1" 
                         ItemsSource="{Binding ToolItems}"
                         SelectedIndex="0" 
                         ItemContainerStyle="{DynamicResource ListBoxItemStyle}"
                         dd:DragDrop.CanDragWithMouseRightButton="True"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.DropTargetAdornerBrush="Coral"
                         dd:DragDrop.UseDefaultEffectDataTemplate="True">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid Width="{Binding Width}" Height="{Binding Height}" Margin="{Binding Margin,Converter={StaticResource DoubleToThickness}}">
                                    <util:Badged HorizontalAlignment="Center" VerticalAlignment="Center" BadgeForeground="{DynamicResource MahApps.Brushes.Text}" BadgeBackground="{DynamicResource DangerBrush}"  Badge="{Binding Badge}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="5"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <svg:PackSvg Height="18" Width="18"    
                                                                 HorizontalAlignment="Center"
                                                                 VerticalAlignment="Center"
                                                                 Kind="{Binding Glyph}" 
                                                                 Fill="{DynamicResource MahApps.Brushes.Accent}"/>
                                            <TextBlock Grid.Row="2" Text="{Binding Label}" Foreground="{DynamicResource MahApps.Brushes.Text}"/>
                                        </Grid>
                                    </util:Badged>                                   
                                </Grid>
                                <util:FButton x:Name="closebtn" FIcon="&#xe60a;" FIconSize="9" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding }" Foreground="{DynamicResource DangerBrush}" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource FButton_Transparency}" AllowsAnimation="True" Visibility="Collapsed"></util:FButton>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                    <Setter TargetName="closebtn" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Grid Grid.Column="2">
                    <util:PropertiesView SelectedObject="{Binding ElementName=listBox,Path=SelectedItem}">
                        <util:PropertiesView.Resources>
                            <Style x:Key="GlyphStyle" TargetType="{x:Type ContentControl}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Grid DataContext="{Binding Path=DataContext,RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}">
                                                <ComboBox BorderThickness="0" ItemsSource="{Binding DataContext.Glyphs, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" SelectedValue="{Binding Glyph}" />
                                            </Grid>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>          
                        </util:PropertiesView.Resources>
                    </util:PropertiesView>
                </Grid>
            </Grid>
            <StackPanel Grid.Row="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right" Margin="10,0">
                <util:FButton CornerRadius="2" x:Name="PART_AffirmativeButton"
                    Height="25"
                    MinWidth="60"
                    Content="确定"
                    Margin="0 0 5 0" />
                <util:FButton CornerRadius="2" x:Name="PART_NegativeButton"
                    Height="25"
                    MinWidth="60"
                    Content="取消"
                    Margin="5 0 5 0" />
            </StackPanel>
        </Grid>
    </Border>
</util:BaseDialog>
