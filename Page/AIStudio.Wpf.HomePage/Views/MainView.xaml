<UserControl x:Class="AIStudio.Wpf.HomePage.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AIStudio.Wpf.HomePage.Views"            
             xmlns:util="https://astudio.github.io/utilcontrol"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:svg="clr-namespace:Svg2XamlTestExtension;assembly=Svg2XamlTestExtension"
             xmlns:core="clr-namespace:AIStudio.Core;assembly=AIStudio.Core"
             xmlns:converter="clr-namespace:AIStudio.Core.Converters;assembly=AIStudio.Core"
             xmlns:converter2="clr-namespace:AIStudio.Wpf.BasePage.Converters;assembly=AIStudio.Wpf.BasePage"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True" 
             x:Name="mainView"
             Focusable="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/AIStudio.Wpf.HomePage;component/Resources/MainViewResource.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <util:DoubleToThickness x:Key="DoubleToThickness"/>
            <Style x:Key="MainSearchStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <Grid Height="Auto" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <svg:PackSvg x:Name="Icon" Height="24" Width="24" Margin="5"   
                                         Kind="A" 
                                         Fill="{DynamicResource TitleForegroundBrush}" 
                                         Visibility="{Binding WindowSetting.NavigationLocation,Converter={converter:StringToVisibilityConverter},ConverterParameter='Left'}"/>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RightBarStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <StackPanel Orientation="Horizontal">
                                <Grid>
                                    <util:InputComboBox Width="156" x:Name="txtSearch"    
                                        util:ControlAttachProperty.Watermark="搜索(Ctrl+Q)"
                                        Text="{Binding SearchText,Mode=TwoWay}"
                                        ItemsSource="{Binding SearchMenus}"
                                        IsFocusText="{Binding IsFocusSearchText}"
                                        BorderBrush="{DynamicResource MahApps.Brushes.Gray8}"
                                        BorderThickness="0"
                                        MaxDropDownHeight="230"
                                        DisplayMemberPath="Label" SelectedValuePath="Code" Style="{StaticResource UnderlineInputComboBoxStyle}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="ResultChanged">
                                                <i:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{Binding Path=SelectedItem, ElementName=txtSearch}" />
                                            </i:EventTrigger>              
                                        </i:Interaction.Triggers>
                                    </util:InputComboBox>
                                </Grid>

                                <StackPanel Orientation="Horizontal" Visibility="{Binding IsMain,Converter={converter:ConverterBoolToVisibility}}">
                                    <local:NoticeIconView Margin="8,0,8,3"   HorizontalAlignment="Center" VerticalAlignment="Bottom" DataContext="{Binding NoticeIconViewModel}"/>

                                    <util:DropDown Margin="8,0,0,0">
                                        <util:DropDown.Content>
                                            <Image                                           
                                           Stretch="Fill"                
                                           util:ImageProperty.CornerRadius="50"       
                                           Source="{Binding Operator.Avatar,Converter={converter2:StringToAvatarSourceConverter}}"/>
                                        </util:DropDown.Content>
                                        <util:DropDown.Child>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid Grid.Row="0">
                                                    <Button 
                                                    Height="30"
                                                    Width="100"
                                                    VerticalAlignment="Center"  
                                                    FontFamily="/Util.Controls;component/Resources/#FontAwesome"
                                                    Content="&#xf2c0; 个人中心" 
                                                    Command="{Binding UserDropCommand}"
                                                    CommandParameter="UserCenter"
                                                    Style="{StaticResource LinkButtonStyle}"/>
                                                </Grid>
                                                <Grid Grid.Row="1">
                                                    <Button 
                                                    Height="30"
                                                    Width="100"
                                                    VerticalAlignment="Center"  
                                                    FontFamily="/Util.Controls;component/Resources/#FontAwesome"
                                                    Content="&#xf013; 个人设置" 
                                                    Command="{Binding UserDropCommand}"
                                                    CommandParameter="UserSet"
                                                    Style="{StaticResource LinkButtonStyle}"/>
                                                </Grid>
                                                <Grid Grid.Row="2">
                                                    <Button 
                                                    Height="30"
                                                    Width="100"
                                                    VerticalAlignment="Center"  
                                                    FontFamily="/Util.Controls;component/Resources/#FontAwesome"
                                                    Content="&#xf023; 修改密码" 
                                                    Command="{Binding UserDropCommand}"
                                                    CommandParameter="EditPwd"
                                                    Style="{StaticResource LinkButtonStyle}"/>
                                                </Grid>
                                                <Border Grid.Row="2"
                                                VerticalAlignment="Bottom"
                                                BorderBrush="{DynamicResource GrayBrush4}"
                                                SnapsToDevicePixels="True"
                                                BorderThickness="0,0,0,1" />
                                                <Grid Grid.Row="3">
                                                    <Button 
                                                    Height="30"
                                                    Width="100"
                                                    VerticalAlignment="Center"  
                                                    FontFamily="/Util.Controls;component/Resources/#FontAwesome"
                                                    Content="&#xf08b; 退出登录" 
                                                    Command="{Binding UserDropCommand}"
                                                    CommandParameter="Logout"
                                                    Style="{StaticResource LinkButtonStyle}"/>
                                                </Grid>
                                            </Grid>
                                        </util:DropDown.Child>
                                    </util:DropDown>
                                    <TextBlock Margin="2,0" VerticalAlignment="Center" Foreground="{DynamicResource TitleForegroundBrush}" Text="{Binding Operator.UserName}"></TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ToolBarStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <ToolBarTray >
                                <ToolBar>
                                    <ItemsControl ItemsSource="{Binding DataContext.ToolItems, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button Width="{Binding Width}" Height="{Binding Height}" Margin="{Binding Margin,Converter={StaticResource DoubleToThickness}}" Style="{StaticResource LinkButtonStyle}" util:ButtonHelper.HoverBrush="{DynamicResource TitleBackgroundBrush}" Foreground="{DynamicResource TitleForegroundBrush}"
                                                        Command="{Binding DataContext.SearchCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding }">
                                                    <util:Badged  VerticalAlignment="Center" BadgeForeground="{DynamicResource MahApps.Brushes.Text}" BadgeBackground="{DynamicResource DangerBrush}"  Badge="{Binding Badge}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="5"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <svg:PackSvg Height="18" Width="18"    
                                                                 HorizontalAlignment="Center"
                                                                 VerticalAlignment="Center"
                                                                 Kind="{Binding Glyph}" 
                                                                 Fill="{DynamicResource MahApps.Brushes.Accent}"/>
                                                            <TextBlock Grid.Row="2" Text="{Binding Label}" Foreground="{DynamicResource MahApps.Brushes.Text}"/>
                                                        </Grid>
                                                    </util:Badged>
                                                </Button>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <Button ToolBar.OverflowMode="Always"  Content="添加或移除按钮" Style="{StaticResource LinkButtonStyle}" Command="{Binding DataContext.ToolBarConfigCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"></Button>
                                </ToolBar>
                            </ToolBarTray>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StatusBarStyle" TargetType="{x:Type ContentControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <StackPanel Orientation="Horizontal">
                                <Grid Visibility="{Binding IsMain,Converter={converter:ConverterBoolToVisibility}}">
                                    <util:DropDown Grid.Column="0" Height="30" Margin="8,0,8,0"                                          
                                               ToolTip="{Binding WSocketClient.ServerIP}"
                                               Visibility="{Binding WSocketClient.IsInit,Converter={StaticResource bool2VisibilityConverter}}">
                                        <util:DropDown.Content>
                                            <util:Badged HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                                <util:Badged.Badge>
                                                    <TextBlock Text="{Binding WSocketClient.DelayMS,StringFormat={}{0}ms,TargetNullValue=''}"/>
                                                </util:Badged.Badge>
                                                <util:Badged.Style>
                                                    <Style TargetType="{x:Type util:Badged}" BasedOn="{StaticResource DefaultBadgedStyle}">
                                                        <Setter Property="BadgeBackground" Value="Transparent" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding WSocketClient.AlarmGrade}" Value="DarkDanger">
                                                                <Setter Property="BadgeBackground" Value="{DynamicResource DarkDangerBrush}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WSocketClient.AlarmGrade}" Value="Danger">
                                                                <Setter Property="BadgeBackground" Value="{DynamicResource DangerBrush}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WSocketClient.AlarmGrade}" Value="DarkWarning">
                                                                <Setter Property="BadgeBackground" Value="{DynamicResource DarkWarningBrush}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WSocketClient.AlarmGrade}" Value="Warning">
                                                                <Setter Property="BadgeBackground" Value="{DynamicResource WarningBrush}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WSocketClient.AlarmGrade}" Value="DarkInfo">
                                                                <Setter Property="BadgeBackground" Value="{DynamicResource DarkInfoBrush}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WSocketClient.AlarmGrade}" Value="Info">
                                                                <Setter Property="BadgeBackground" Value="{DynamicResource InfoBrush}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WSocketClient.AlarmGrade}" Value="DarkSuccess">
                                                                <Setter Property="BadgeBackground" Value="{DynamicResource DarkSuccessBrush}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WSocketClient.AlarmGrade}" Value="Success">
                                                                <Setter Property="BadgeBackground" Value="{DynamicResource SuccessBrush}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding WSocketClient.DelayMS}" Value="{x:Null}">
                                                                <Setter Property="BadgeBackground" Value="Transparent" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </util:Badged.Style>
                                                <Grid>
                                                    <Path Visibility="{Binding WSocketClient.IsConnected,Converter={converter:ConverterBoolToVisibility}}" 
                                                      Data="F1 M 25.3333,23.7501L 28.4999,23.7501L 28.5,33.25L 25.3333,33.2501L 25.3333,23.7501 Z M 30.0833,25.3335L 33.2499,25.3335L 33.25,39.5834L 30.0833,39.5834L 28.5,41.1667L 28.5,50.6667L 25.3333,50.6667L 25.3333,41.1667L 23.75,39.5834L 20.5833,39.5835L 20.5832,25.3335L 23.7499,25.3335L 23.7499,34.8334L 24.5416,34.8334L 29.2916,34.8334L 30.0833,34.8334L 30.0833,25.3335 Z M 30.0833,47.5L 30.0833,44.3334L 50.6667,44.3334L 50.6667,30.0833L 34.8333,30.0834L 34.8333,26.9167L 55.4166,26.9167L 55.4166,47.5L 41.1666,47.5L 41.1667,50.6667L 45.125,50.6667L 45.9166,53.8333L 33.25,53.8333L 34.0417,50.6667L 38,50.6667L 38,47.5L 30.0833,47.5 Z " 
                                                      Stretch="Fill" 
                                                      Fill="{DynamicResource MahApps.Brushes.Text}"
                                                      Width="15" 
                                                      Height="15"                                                      
                                                      HorizontalAlignment="Center" 
                                                      VerticalAlignment="Center" />
                                                    <Path Visibility="{Binding WSocketClient.IsConnected,Converter={converter:ConverterBoolToOppositeVisibility}}" 
                                                      Data="F1 M 48.0542,39.5833L 53.0417,44.5708L 58.0291,39.5834L 60.1666,41.7209L 55.1792,46.7083L 60.1667,51.6958L 58.0292,53.8333L 53.0417,48.8458L 48.0542,53.8333L 45.9167,51.6958L 50.9042,46.7083L 45.9167,41.7208L 48.0542,39.5833 Z M 23.7499,23.7501L 26.9166,23.7501L 26.9166,33.25L 23.75,33.2501L 23.7499,23.7501 Z M 28.4999,25.3335L 31.6666,25.3335L 31.6666,39.5835L 28.5,39.5834L 26.9166,41.1667L 26.9166,50.6667L 23.7499,50.6667L 23.75,41.1667L 22.1666,39.5834L 18.9999,39.5835L 18.9999,25.3335L 22.1666,25.3335L 22.1666,34.8334L 22.9583,34.8335L 27.7083,34.8334L 28.5,34.8334L 28.4999,25.3335 Z M 28.5,47.5001L 28.5,44.3334L 45.6792,44.3334L 48.0541,46.7083L 47.2624,47.5001L 39.5833,47.5L 39.5833,50.6667L 43.5416,50.6667L 44.3333,53.8334L 31.6667,53.8334L 32.4583,50.6667L 36.4166,50.6667L 36.4166,47.5L 28.5,47.5001 Z M 49.0833,30.0834L 33.25,30.0834L 33.25,26.9167L 53.8333,26.9167L 53.8332,40.9293L 53.0416,41.7209L 49.0833,37.7625L 49.0833,30.0834 Z "
                                                      Stretch="Fill" 
                                                      Fill="{DynamicResource DangerBrush}" 
                                                      Width="15" 
                                                      Height="15"                                                     
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                                </Grid>
                                            </util:Badged>
                                        </util:DropDown.Content>
                                        <util:DropDown.Child>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid Grid.Row="0">
                                                    <Button 
                                                    Height="30"
                                                    Width="100"
                                                    VerticalAlignment="Center"  
                                                    FontFamily="/Util.Controls;component/Resources/#FontAwesome"
                                                    Content="&#xf144; 开始测速" 
                                                    Command="{Binding WSocketClient.StartPingCommand}"
                                                    CommandParameter="UserCenter"
                                                    IsEnabled="{Binding WSocketClient.IsPing,Converter={converter:InvertBoolConverter}}"
                                                    Style="{StaticResource LinkButtonStyle}"/>
                                                </Grid>
                                                <Grid Grid.Row="1">
                                                    <Button 
                                                    Height="30"
                                                    Width="100"
                                                    VerticalAlignment="Center"  
                                                    FontFamily="/Util.Controls;component/Resources/#FontAwesome"
                                                    Content="&#xf056; 停止测速" 
                                                    Command="{Binding WSocketClient.StopPingCommand}"
                                                    CommandParameter="UserSet"
                                                     IsEnabled="{Binding WSocketClient.IsPing}"
                                                    Style="{StaticResource LinkButtonStyle}"/>
                                                </Grid>
                                            </Grid>
                                        </util:DropDown.Child>
                                    </util:DropDown>
                                </Grid>
                                
                                <util:RunningBlock Margin="10,0" BorderThickness="0" Foreground="{DynamicResource MahApps.Brushes.Text}" Content="{Binding NoticeText}" Width="200"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy"></CommandBinding>
    </UserControl.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid x:Name="Titlebar"  
              Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type util:WindowBase}}, Path=CaptionHeight,Mode=OneWay}"       
              Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type util:WindowBase}}, Path=ShowTitleBar,Mode=OneWay,Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick"
                                  Command="{Binding TitleClickCommand}"
                                  CommandParameter="{Binding }"/>
            </Grid.InputBindings>
            <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
                        FontSize="{DynamicResource MahApps.Font.Size.Window.Title}"
                        Foreground="{DynamicResource TitleForegroundBrush}"                              
                        Text="{Binding PageTitle}"
                        TextTrimming="CharacterEllipsis">
            </TextBlock>

            <StackPanel Margin="0,0,85,0" Orientation="Horizontal" HorizontalAlignment="Right">
                <ContentControl Style="{DynamicResource RightBarStyle}" />

                <Menu Background="Transparent" Visibility="{Binding IsMain,Converter={converter:ConverterBoolToVisibility}}">
                    <MenuItem Height="25" Style="{StaticResource TransparentHeaderMenuItem}" Foreground="{DynamicResource TitleForegroundBrush}" Padding="0" Icon="&#xe665;" >
                        <MenuItem Icon="&#xE633;" Header="{DynamicResource 系统设置}" Command="{Binding SystemManageCommand}" CommandParameter="Setting" Style="{StaticResource TransparentHeaderMenuItem}"/>
                        <MenuItem Icon="&#xe61b;" Header="本地日志" Command="{Binding SystemManageCommand}" CommandParameter="Logs" Style="{StaticResource TransparentHeaderMenuItem}"/>
                        <MenuItem Icon="&#xe64a;" Header="修改密码" Command="{Binding SystemManageCommand}" CommandParameter="EditPwd" Style="{StaticResource TransparentHeaderMenuItem}"/>
                        <Separator Style="{StaticResource HorizontalSeparatorStyle}"/>
                        <MenuItem Icon="&#xe657;" Header="问题反馈" Style="{StaticResource TransparentHeaderMenuItem}"/>
                        <MenuItem Icon="&#xe61e;" Header="技术支持" Style="{StaticResource TransparentHeaderMenuItem}"/>
                        <MenuItem Icon="&#xe60e;" Header="帮助" Command="{Binding SystemManageCommand}" CommandParameter="Helper" Style="{StaticResource TransparentHeaderMenuItem}"/>
                        <MenuItem Icon="&#xe635;" Header="关于" Command="{Binding SystemManageCommand}" CommandParameter="About" Style="{StaticResource TransparentHeaderMenuItem}"/>
                    </MenuItem>
                </Menu>
            </StackPanel>

            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WindowSetting.NavigationAccent}" Value="Light">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>

        <Grid Grid.Row="1" Visibility="{Binding WindowSetting.NavigationLocation,Converter={converter:StringToVisibilityConverter},ConverterParameter='Top'}">
            <Menu x:Name="MenuControl"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                ItemContainerStyle="{StaticResource MenuItemStyle}" 
                ItemsSource="{Binding MenuItems}"
                ItemTemplate="{StaticResource MenuItemDataTemplate}"            
                Style="{StaticResource MahApps.Styles.Menu}" 
                Background="Transparent" />
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WindowSetting.NavigationAccent}" Value="Light">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>



        <util:HamburgerTreeMenu Grid.Row="2"
            VerticalAlignment="Stretch"
            x:Name="HamburgerMenuControl"
            SelectedIndex="1"
            Foreground="{DynamicResource MahApps.Brushes.ThemeBackground}"
            BorderBrush="Transparent"
            HamburgerWidth="36"
            HamburgerHeight ="36"
            HamburgerMargin="0"
            CompactPaneLength ="36"
            OpenPaneLength="180"
            ItemsSource="{Binding MenuItems}"
            SelectedItem="{Binding SelectedMenuItem}"
            OptionsItemTemplate="{StaticResource HamburgerMenuItem}"
            PaneBackground="Transparent">
            <util:HamburgerTreeMenu.Style>
                <Style TargetType="{x:Type util:HamburgerTreeMenu}" BasedOn="{StaticResource HamburgerTreeMenuStyle}">
                    <Setter Property="ItemTemplate" Value="{StaticResource HamburgerMenuImageItem}"/>
                    <Setter Property="DisplayMode" Value="Overlay"/>
                    <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}"/>
                    <Setter Property="HamburgerMenuTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentControl Style="{DynamicResource MainSearchStyle}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsPaneOpen" Value="False">
                            <Setter Property="ItemTemplate" Value="{StaticResource LeftHamburgerMenuImageItem}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding WindowSetting.NavigationLocation}" Value="Left">
                            <Setter Property="DisplayMode" Value= "CompactInline"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowSetting.NavigationAccent}" Value="Light">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </Style.Triggers>

                </Style>
            </util:HamburgerTreeMenu.Style>

            <!--  Content  -->
            <util:HamburgerTreeMenu.ContentTemplate>
                <DataTemplate>
                    <Grid DataContext="{Binding ElementName=mainView,Path=DataContext}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Visibility="{Binding WindowSetting.ToolBarLocation,Converter={converter:StringToVisibilityConverter},ConverterParameter='Top'}">
                            <ContentControl Style="{DynamicResource ToolBarStyle}" />
                        </Grid>

                        <Grid Grid.Row="1" prism:RegionManager.RegionManager="{Binding _regionManager}">
                            <local:MainTabView />
                        </Grid>

                        <Grid Grid.Row="2" Visibility="{Binding WindowSetting.StatusBarLocation,Converter={converter:StringToVisibilityConverter},ConverterParameter='Bottom'}">
                            <ContentControl Style="{DynamicResource StatusBarStyle}" />
                        </Grid>
                    </Grid>
                </DataTemplate>
            </util:HamburgerTreeMenu.ContentTemplate>
        </util:HamburgerTreeMenu>


    </Grid>
</UserControl>
