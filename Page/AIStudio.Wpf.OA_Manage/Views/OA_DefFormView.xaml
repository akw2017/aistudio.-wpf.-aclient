<UserControl x:Class="AIStudio.Wpf.OA_Manage.Views.OA_DefFormView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:util="https://astudio.github.io/utilcontrol" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:AIStudio.Wpf.OA_Manage.Views" 
             xmlns:core="clr-namespace:AIStudio.Core;assembly=AIStudio.Core"
			 xmlns:converter="clr-namespace:AIStudio.Core.Converters;assembly=AIStudio.Core"
             xmlns:command="clr-namespace:AIStudio.Core.ExCommand;assembly=AIStudio.Core"
             xmlns:perm="clr-namespace:AIStudio.Wpf.BasePage.Permission;assembly=AIStudio.Wpf.BasePage"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                <util:FButton CornerRadius="2" FIcon="&#xe62c;" Margin="3" Content="新建" perm:PermissionHelper.HasPerm="OA_DefForm.Add" Command="{Binding AddCommand}" Background="{DynamicResource PrimaryBrush}"></util:FButton>
                <util:FButton CornerRadius="2" FIcon="&#xe62d;" Margin="3" Content="删除" perm:PermissionHelper.HasPerm="OA_DefForm.Delete" Command="{Binding DeleteCommand}" Background="{DynamicResource DangerBrush}"></util:FButton>
                <util:FButton CornerRadius="2" FIcon="&#xe641;" Margin="3" Content="刷新" Command="{Binding RefreshCommand}"></util:FButton>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Right">
                <ComboBox x:Name="combox" Width="120" Margin="3" Text="{Binding Condition}" SelectedItem="{Binding ConditionItem}" util:ControlAttachProperty.CornerRadius="3"  Style="{StaticResource ClearButtonComboBox}"
                      Visibility="{Binding ElementName=combox,Path=Items.Count,Converter={converter:IntVisibilityConverter}}">
                    <ComboBoxItem Tag="Type">分类</ComboBoxItem>
                    <ComboBoxItem Tag="Name">标题</ComboBoxItem>
                    <ComboBoxItem Tag="Text">摘要</ComboBoxItem>
                    <ComboBoxItem Tag="CreatorName">创建者</ComboBoxItem>
                    <ComboBoxItem Tag="Status">状态</ComboBoxItem>
                </ComboBox>
                <util:SearchBar Width="220" Margin="4,3" 
                     Text="{Binding KeyWord}"
                     Command="{Binding SearchCommand}"
                     Style="{StaticResource DefalutSearchBar}">
                </util:SearchBar>
            </StackPanel>
        </DockPanel>
        <DataGrid Grid.Row="1" x:Name="table" ItemsSource="{Binding Data}"
                  Margin="3"
                  IsReadOnly="False"
                  BorderThickness="1"
                  GridLinesVisibility="All"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  VirtualizingStackPanel.IsVirtualizingWhenGrouping="True" 
                  ScrollViewer.CanContentScroll="True"                
                  EnableRowVirtualization="True"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False">
            <i:Interaction.Behaviors>
                <core:SelectAllBahavior InitialState="False"/>
            </i:Interaction.Behaviors>
            <DataGrid.Columns>     
				<DataGridTextColumn Header="分类"  Binding="{Binding Type}" IsReadOnly="True"/>
				<DataGridTextColumn Header="标题"  Binding="{Binding Name}" IsReadOnly="True"/>
				<DataGridTextColumn Header="摘要"  Binding="{Binding Text}" IsReadOnly="True"/>
                <DataGridTextColumn Header="创建者"  Binding="{Binding CreatorName}" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="状态" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name ="text" Text="未启用" VerticalAlignment="Center" Foreground="{DynamicResource MahApps.Brushes.Gray8}" />
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="1">
                                    <Setter TargetName="text" Property="Text" Value="正常"/>
                                    <Setter TargetName="text" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}"/>
                                </DataTrigger>                              
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="权限角色" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <util:MultiComboBox ItemsSource="{Binding DataContext.Roles, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                                            core:CustomeSelectionItems.SelectedItems="{Binding Roles}" IsEnabled="False"
                                            DisplayMemberPath="text" SelectedValuePath="value" ExceededTextFiller=""
                                            Visibility="{Binding Roles.Count,Converter={converter:IntVisibilityConverter}}">
                                
                            </util:MultiComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="操作" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                                    <Hyperlink Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding .}" Foreground="{DynamicResource MahApps.Brushes.Text}"> <TextBlock Text="编辑" /> </Hyperlink>
                                </TextBlock>
                                <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                                    <Hyperlink Command="{Binding DataContext.CopyCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding .}" Foreground="{DynamicResource MahApps.Brushes.Text}"> <TextBlock Text="复制" /> </Hyperlink>
                                </TextBlock>
                                <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                                    <Hyperlink Command="{Binding DataContext.StartCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding .}" Foreground="{DynamicResource MahApps.Brushes.Text}"> <TextBlock Text="启用" /> </Hyperlink>
                                </TextBlock>
                                <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                                    <Hyperlink Command="{Binding DataContext.StopCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding .}" Foreground="{DynamicResource MahApps.Brushes.Text}"> <TextBlock Text="停用" /> </Hyperlink>
                                </TextBlock>
                                <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                                    <Hyperlink Command="{Binding DataContext.DeleteOneCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding Id}" Foreground="{DynamicResource MahApps.Brushes.Text}"> <TextBlock Text="删除" /> </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
         
            <DataGrid.ColumnHeaderStyle>
                <Style BasedOn="{StaticResource MahApps.Styles.DataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                    <!--<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>-->
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style BasedOn="{StaticResource MahApps.Styles.DataGridCell}"
                       TargetType="{x:Type DataGridCell}">
                    <Setter Property="Padding" Value="1,0,1,0"/>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MahApps.Styles.DataGrid}"
                       TargetType="{x:Type DataGrid}">
                    <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource MahApps.Brushes.Gray10}" />
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
                </Style>
            </DataGrid.Style>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=table}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <util:Pagination Grid.Row="2" 
                         x:Name="pagination"
                         PaginationStyle="Simple" 
                         CurrentIndex="{Binding Pagination.PageIndex,Mode=TwoWay}"  
                         Total="{Binding Pagination.Total}"
                         PageSize="{Binding Pagination.PageRows,Mode=TwoWay}"
                         Height="Auto" HorizontalAlignment="Right" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CurrentIndexChanged">
                    <command:ExInvokeCommandAction Command="{Binding CurrentIndexChangedComamnd}" CommandParameter="{Binding ElementName=pagination}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </util:Pagination>
    </Grid>
</UserControl>
