<UserControl x:Class="AIStudio.Wpf.Quartz_Manage.Views.Quartz_TaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:util="https://astudio.github.io/utilcontrol" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:AIStudio.Wpf.Quartz_Manage.Views" 
             xmlns:core="clr-namespace:AIStudio.Core;assembly=AIStudio.Core"
		     xmlns:converter="clr-namespace:AIStudio.Core.Converters;assembly=AIStudio.Core"
             xmlns:command="clr-namespace:AIStudio.Core.ExCommand;assembly=AIStudio.Core"
             xmlns:perm="clr-namespace:AIStudio.Wpf.BasePage.Permission;assembly=AIStudio.Wpf.BasePage"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                <util:FButton CornerRadius="2" FIcon="&#xe62c;" Margin="3" Content="新建" Command="{Binding AddCommand}" ></util:FButton>
                <util:FButton CornerRadius="2" FIcon="&#xf04c;" FIconFamily="FAwesome" Margin="3" Content="暂停" Command="{Binding PauseCommand}"></util:FButton>
                <util:FButton CornerRadius="2" FIcon="&#xe605;" Margin="3" Content="开启" Command="{Binding StartCommand}"></util:FButton>
                <util:FButton CornerRadius="2" FIcon="&#xf051;" FIconFamily="FAwesome" Margin="3" Content="立即执行" Command="{Binding ToDoCommand}"></util:FButton>
                <util:FButton CornerRadius="2" FIcon="&#xe63e;" Margin="3" Content="修改" Command="{Binding EditFirstCommand}"></util:FButton>
                <util:FButton CornerRadius="2" FIcon="&#xe62d;" Margin="3" Content="删除" Command="{Binding DeleteCommand}"></util:FButton>
                <util:FButton CornerRadius="2" FIcon="&#xe641;" Margin="3" Content="刷新" Command="{Binding RefreshCommand}"></util:FButton>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Right">
                <util:SearchBar Width="220" Margin="4,3" 
                     Text="{Binding KeyWord}"
                     Command="{Binding SearchCommand}"
                     Style="{StaticResource DefalutSearchBar}">
                </util:SearchBar>
            </StackPanel>
        </DockPanel>
        <DataGrid Grid.Row="1" x:Name="table" ItemsSource="{Binding Data}"
                  Margin="3"
                  IsReadOnly="False"
                  BorderThickness="1"
                  GridLinesVisibility="All"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  VirtualizingStackPanel.IsVirtualizingWhenGrouping="True" 
                  ScrollViewer.CanContentScroll="True"
                  EnableRowVirtualization="True"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False">
            <i:Interaction.Behaviors>
                <core:SelectAllBahavior InitialState="False"/>
            </i:Interaction.Behaviors>
            <DataGrid.Columns>
                <DataGridTextColumn Header="作业名称"  Binding="{Binding TaskName}" IsReadOnly="True"/>
                <DataGridTextColumn Header="分组"  Binding="{Binding GroupName}" IsReadOnly="True"/>
                <DataGridTextColumn Header="最后执行时间"  Binding="{Binding LastRunTime,StringFormat=yyyy-MM-dd HH:mm:ss}" IsReadOnly="True"/>
                <DataGridTextColumn Header="间隔(Cron)"  Binding="{Binding Interval}" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="状态" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name ="text" Text="运行中" VerticalAlignment="Center" Foreground="{DynamicResource MahApps.Brushes.Accent}" />
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="1">
                                    <Setter TargetName="text" Property="Text" Value="关闭"/>
                                    <Setter TargetName="text" Property="Foreground" Value="Gray"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="2">
                                    <Setter TargetName="text" Property="Text" Value="完成"/>
                                    <Setter TargetName="text" Property="Foreground" Value="Green"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="3">
                                    <Setter TargetName="text" Property="Text" Value="异常"/>
                                    <Setter TargetName="text" Property="Foreground" Value="Red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="4">
                                    <Setter TargetName="text" Property="Text" Value="堵塞"/>
                                    <Setter TargetName="text" Property="Foreground" Value="Red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="5">
                                    <Setter TargetName="text" Property="Text" Value="未知"/>
                                    <Setter TargetName="text" Property="Foreground" Value="Gray"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="描述"  Binding="{Binding Describe}" IsReadOnly="True"/>
                <DataGridTextColumn Header="请求方式"  Binding="{Binding RequestType}" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="操作" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                                    <Hyperlink Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding .}" Foreground="{DynamicResource MahApps.Brushes.Text}"> <TextBlock Text="编辑" /> </Hyperlink>
                                </TextBlock>
                                <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                                    <Hyperlink Command="{Binding DataContext.DeleteOneCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding Id}" Foreground="{DynamicResource MahApps.Brushes.Text}"> <TextBlock Text="删除" /> </Hyperlink>
                                </TextBlock>
                                <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                                    <Hyperlink Command="{Binding DataContext.LogCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding .}" Foreground="{DynamicResource MahApps.Brushes.Text}"> <TextBlock Text="记录" /> </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

            <DataGrid.ColumnHeaderStyle>
                <Style BasedOn="{StaticResource MahApps.Styles.DataGridColumnHeader}" TargetType="DataGridColumnHeader" >
                    <!--<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>-->
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style BasedOn="{StaticResource MahApps.Styles.DataGridCell}"
                       TargetType="{x:Type DataGridCell}">
                    <Setter Property="Padding" Value="1,0,1,0"/>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource MahApps.Styles.DataGrid}"
                       TargetType="{x:Type DataGrid}">
                    <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource MahApps.Brushes.Gray10}" />
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource MahApps.Brushes.Gray5}" />
                </Style>
            </DataGrid.Style>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding EditCommand}" CommandParameter="{Binding SelectedItem, ElementName=table}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <util:Pagination Grid.Row="2" 
                         x:Name="pagination"
                         PaginationStyle="Simple" 
                         CurrentIndex="{Binding Pagination.PageIndex,Mode=TwoWay}"  
                         Total="{Binding Pagination.Total}"
                         PageSize="{Binding Pagination.PageRows,Mode=TwoWay}"
                         Height="Auto" HorizontalAlignment="Right" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CurrentIndexChanged">
                    <command:ExInvokeCommandAction Command="{Binding CurrentIndexChangedComamnd}" CommandParameter="{Binding ElementName=pagination}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </util:Pagination>
    </Grid>
</UserControl>
