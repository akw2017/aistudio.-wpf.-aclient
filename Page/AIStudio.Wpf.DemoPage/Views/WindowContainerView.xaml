<UserControl x:Class="AIStudio.Wpf.DemoPage.Views.WindowContainerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:util="https://astudio.github.io/utilcontrol" 
        xmlns:utilxceed="https://astudio.github.io/utilcontrol.xceed"       
        xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
        xmlns:view="clr-namespace:AIStudio.Wpf.DemoPage.Models"
        xmlns:res="clr-namespace:AIStudio.Wpf.DemoPage.Views.Resources"
        xmlns:conv="clr-namespace:AIStudio.Wpf.DemoPage.Converters"
        xmlns:sample="clr-namespace:AIStudio.Wpf.DemoPage.Models"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d" 
        d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="./Resources/FancyStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <conv:WindowStateToBoolConverter x:Key="windowStateBoolConv" />

            <!--Base style for ChildWindowStyle and MessageBoxStyle-->
            <Style x:Key="windowControlStyle" TargetType="{x:Type utilxceed:WindowControl}">
                <Setter Property="WindowBackground" Value="{Binding WindowBackground}" />
                <Setter Property="WindowBorderBrush" Value="{Binding WindowBorderBrush}" />
                <Setter Property="WindowBorderThickness" Value="{Binding WindowBorderThickness}" />
                <Setter Property="WindowInactiveBackground" Value="{Binding WindowInactiveBackground}" />
                <Setter Property="WindowOpacity" Value="{Binding WindowOpacity}" />
                <Setter Property="CaptionFontSize" Value="{Binding TitleFontSize}" />
                <Setter Property="CaptionForeground" Value="{Binding TitleForeground}" />
                <Setter Property="CaptionShadowBrush" Value="{Binding TitleShadowBrush}" />
                <Setter Property="CloseButtonStyle" Value="{Binding CloseButtonStyle}" />
            </Style>

            <!--Style for the MessageBox-->
            <Style x:Key="messageBoxStyle" TargetType="{x:Type utilxceed:MessageBox}" BasedOn="{StaticResource windowControlStyle}">
                <Setter Property="ButtonRegionBackground" Value="{StaticResource FancyButtonRegionBackground}" />
                <Setter Property="OkButtonStyle" Value="{StaticResource FancyButtonStyle}" />
                <Setter Property="CancelButtonStyle" Value="{StaticResource FancyButtonStyle}" />
                <Setter Property="YesButtonStyle" Value="{StaticResource FancyButtonStyle}" />
                <Setter Property="NoButtonStyle" Value="{StaticResource FancyButtonStyle}" />
            </Style>

            <utilxceed:SolidColorBrushToColorConverter x:Key="SolidColorBrushToColorConverter" />
            <conv:WindowStateToBoolConverter x:Key="WindowStateToBoolConverter" />

            <ObjectDataProvider x:Key="GenderEnum" MethodName="GetValues"
                          ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="sample:GenderData" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </UserControl.Resources>



    <UserControl.DataContext>
        <!--A model containing the brushes and other properties was created to share theses values
      between ChildWindow, MessageBox, and StyleableWindow.-->
        <view:WindowModel
         WindowBackground="#FFC72035"
         WindowBorderBrush="Black"
         WindowBorderThickness="2"
         WindowInactiveBackground="LightGray"
         WindowOpacity="0.75"
         WindowStyle="SingleBorderWindow"
         TitleForeground="Brown"
         TitleShadowBrush="White"
         TitleFontSize="15"
         ResizeMode="CanResize"
         CloseButtonVisibility="Visible" 
         CloseButtonStyle="{StaticResource FancyButtonCloseStyle}"
         MinimizeButtonStyle="{StaticResource FancyButtonMinimizeStyle}"
         MaximizeButtonStyle="{StaticResource FancyButtonMaximizeStyle}"
         RestoreButtonStyle="{StaticResource FancyButtonRestoreStyle}"/>
    </UserControl.DataContext>

    <Grid>
        <TabControl>
            <TabItem Header="util">
                <util:WrapBreakPanel>

                </util:WrapBreakPanel>
            </TabItem>
            <TabItem Header="xceed" IsSelected="True">
                <TabControl>
                    <TabItem Header="container">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <GroupBox Header="Features" Grid.Row="0" Margin="5">
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="ModalBackgroundBrush:" VerticalAlignment="Center" />
                                    <utilxceed:ColorPicker x:Name="_modalBackgroundColorPicker" Grid.Column="1" SelectedColor="{Binding ModalBackgroundBrush, ElementName=_windowContainer, Converter={StaticResource SolidColorBrushToColorConverter}}" Width="100" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5"/>
                                </Grid>
                            </GroupBox>

                            <Grid Grid.Row="1" Margin="10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <TextBlock Text="Usage:" Style="{StaticResource Header}" />

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <StackPanel>
                                        <CheckBox x:Name="_childWindowCheckBox" Content="Child Window" Margin="5" IsChecked="{Binding WindowState, ElementName=_childWindow, Converter={StaticResource WindowStateToBoolConverter}}" />
                                        <CheckBox x:Name="_modalChildWindowCheckBox" Content="Modal Child Window" Margin="5" IsChecked="{Binding WindowState, ElementName=_modalChildWindow, Converter={StaticResource WindowStateToBoolConverter}}" />
                                        <CheckBox x:Name="_messageBoxCheckBox" Content="MessageBox" Margin="5" Checked="OnMessageBoxCheckBoxChecked" Unchecked="OnMessageBoxCheckBoxUnchecked" />
                                    </StackPanel>

                                    <Grid Column="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="80" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>

                                        <!--1st Column -->
                                        <TextBlock Text="First Name:" VerticalAlignment="Center" Margin="10"/>
                                        <TextBox Grid.Column="1" Text="Michael" Width="150" Height="30" HorizontalAlignment="Left"/>
                                        <TextBlock Grid.Row="1" Text="Last Name:" VerticalAlignment="Center" Margin="10"/>
                                        <TextBox Grid.Row="1" Grid.Column="1" Width="150" Height="30" Text="Thompson" HorizontalAlignment="Left"/>
                                        <TextBlock Grid.Row="2" Text="Address:" VerticalAlignment="Center" Margin="10"/>
                                        <TextBox Grid.Row="2" Grid.Column="1" Width="150" Height="30" Text="65 Main street" HorizontalAlignment="Left"/>

                                        <!-- 2nd Column-->
                                        <TextBlock Grid.Column="2" Text="Gender:" VerticalAlignment="Center" Margin="10"/>
                                        <ComboBox Grid.Column="3" Width="100" Height="30" ItemsSource="{Binding Source={StaticResource GenderEnum}}" SelectedIndex="0" Margin="5" HorizontalAlignment="Left"/>
                                        <TextBlock Grid.Row="1" Grid.Column="2" Text="Job Title:" VerticalAlignment="Center" Margin="10"/>
                                        <TextBox Grid.Row="1" Grid.Column="3" Width="100"  Height="30"  Text="Plumber" Margin="5" HorizontalAlignment="Left"/>
                                        <TextBlock Grid.Row="2" Grid.Column="2" Text="Salary:" VerticalAlignment="Center" Margin="10"/>
                                        <utilxceed:IntegerUpDown Grid.Row="2" Width="100" Grid.Column="3" Height="30" Value="30000" Increment="5000" Margin="5" HorizontalAlignment="Left"/>
                                    </Grid>

                                    <Border Grid.Column="1"
                    BorderBrush="Black"
                    BorderThickness="2"
                    Margin="5,0,0,0">

                                        <utilxceed:WindowContainer x:Name="_windowContainer" 
                                     ModalBackgroundBrush="#80000000">
                                            <utilxceed:ChildWindow x:Name="_childWindow" 
                                  Caption="Modaless ChildWindow"
                                  Left="75"
                                  Top="50"
                                  Width="275"
                                  Height="125"
                                  WindowState="Open">
                                                <TextBlock Text="This is a regular Child Window" Padding="10"/>
                                            </utilxceed:ChildWindow>

                                            <utilxceed:ChildWindow x:Name="_modalChildWindow" 
                                  Caption="Modal ChildWindow"
                                  IsModal="True"
                                  Left="175"
                                  Top="125"
                                  Width="275"
                                  Height="125"
                                  WindowState="Open">
                                                <TextBlock Text="This is a modal Child Window" Padding="10"/>
                                            </utilxceed:ChildWindow>

                                            <utilxceed:MessageBox x:Name="_messageBox"
                                 Caption="MessageBox" 
                                 Text="This is a MessageBox, always modal"
                                 Closed="OnMessageBoxClose" />
                                        </utilxceed:WindowContainer>

                                    </Border>
                                </Grid>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="styleable" >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                            </StackPanel>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <GroupBox Header="Features" Margin="5" VerticalAlignment="Stretch">
                                    <StackPanel HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                                            <TextBlock Text="Show ChildWindow:" VerticalAlignment="Center" Width="120"/>
                                            <CheckBox IsChecked="{Binding WindowState, ElementName=_childWindow2, Converter={StaticResource windowStateBoolConv}}"
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,5,0,25">
                                            <TextBlock Text="Enable Styling:" VerticalAlignment="Center" Width="120"/>
                                            <CheckBox x:Name="_enableStyleCheckBox" IsChecked="True" Margin="5,0,0,0" Click="UpdateWindowsStyles" />
                                        </StackPanel>
                                        <!--This is a custom control that modifies the underlying model. It is defined elsewhere to avoid cluttering this XAML. -->
                                        <res:WindowModelEditor IsStyleEnabled="{Binding ElementName=_enableStyleCheckBox, Path=IsChecked}"/>
                                    </StackPanel>
                                </GroupBox>

                                <DockPanel Grid.Column="1" Margin="5" >
                                    <GroupBox Header="MessageBox" DockPanel.Dock="Top" Margin="5" HorizontalAlignment="Stretch">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                            <Button Content="Show System MessageBox" Click="StandardMessageBoxButton_Click" Width="150" Height="30" Margin="10"/>
                                            <Button Content="Show Toolkit MessageBox" Click="StyledMessageBoxButton_Click" Margin="10" Width="150" Height="30"/>
                                        </StackPanel>
                                    </GroupBox>                                  
                                    <GroupBox Header="ChildWindow" Margin="5">
                                        <Border BorderThickness="1" 
                        BorderBrush="Black" >
                                            <utilxceed:WindowContainer >
                                                <utilxceed:ChildWindow x:Name="_childWindow2" Width="325" Height="100"
                                    Caption="Toolkit for WPF ChildWindow"
                                    WindowStartupLocation="Center"
                                    IsModal="True"
                                    WindowState="Open" 
                                    CloseButtonVisibility="{Binding CloseButtonVisibility}"
                                    WindowStyle="{Binding WindowStyle}" >
                                                    <TextBlock>
                           This is the content of the child window.
                                                    </TextBlock>
                                                </utilxceed:ChildWindow>
                                            </utilxceed:WindowContainer>
                                        </Border>
                                    </GroupBox>
                                </DockPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
