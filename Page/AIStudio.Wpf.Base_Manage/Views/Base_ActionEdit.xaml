<ac:ChildWindow x:Class="AIStudio.Wpf.Base_Manage.Views.Base_ActionEdit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="AIStudio.Wpf.Base_Manage.Views"
             xmlns:ac="https://gitee.com/akwkevin/AI-wpf-controls"
             xmlns:core="clr-namespace:AIStudio.Core;assembly=AIStudio.Core"
             xmlns:converter="clr-namespace:AIStudio.Core.Converters;assembly=AIStudio.Core"
             x:Name="dialog"
             mc:Ignorable="d"
             Style="{StaticResource AIStudio.Styles.ChildWindow}">
    <Grid Width="450">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <Border Grid.Row="0">
            <ScrollViewer>
                <StackPanel>
                    <ac:Form DataContext="{Binding Data}"
                                     ac:Form.ItemMargin="3"  
                                     ac:Form.HeaderWidth="80"
                                     ac:Form.HeaderMargin="0,0,3,0">
                        <ac:FormItem>
                            <ac:FormItem.Header>
                                <TextBlock>
                                    <Run Foreground="Red">*</Run>
                                    <Run>菜单名</Run>
                                </TextBlock>
                            </ac:FormItem.Header>
                            <TextBox Text="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
                        </ac:FormItem>
                        <ac:FormItem Header="上级菜单">
                            <ac:TreeSelect ItemsSource="{Binding DataContext.ParentIdTreeData, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                                        SelectedItem="{Binding DataContext.SelectedParent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}},Mode=TwoWay}"
                                        DisplayMemberPath="Text">
                                <ac:TreeSelect.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                        <StackPanel Orientation="Horizontal" Background="Transparent" HorizontalAlignment="Left" >
                                            <TextBlock Text="{Binding Text}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </ac:TreeSelect.ItemTemplate>
                            </ac:TreeSelect>
                        </ac:FormItem>
                        <ac:FormItem Header="类型">
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                <RadioButton IsChecked="{Binding Type, Converter={converter:ConverterValueMapToBool}, ConverterParameter=0}">菜单</RadioButton>
                                <RadioButton IsChecked="{Binding Type, Converter={converter:ConverterValueMapToBool}, ConverterParameter=1}" Margin="5,0,0,0">页面</RadioButton>
                            </StackPanel>
                        </ac:FormItem>
                        <ac:FormItem Header="路径(页面)">
                            <TextBox Text="{Binding Url,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"  ></TextBox>
                        </ac:FormItem>
                        <ac:FormItem Header="参数">
                            <TextBox Text="{Binding Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"  ></TextBox>
                        </ac:FormItem>
                        <ac:FormItem Header="需要权限">
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                <RadioButton IsChecked="True">否</RadioButton>
                                <RadioButton IsChecked="{Binding NeedAction}" Margin="5,0,0,0">是</RadioButton>
                            </StackPanel>
                        </ac:FormItem>
                        <ac:FormItem Header="图标">
                            <TextBox Text="{Binding Icon,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"  ></TextBox>
                        </ac:FormItem>
                        <ac:FormItem Header="排序">
                            <TextBox Text="{Binding Sort,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"  ></TextBox>
                        </ac:FormItem>
                    </ac:Form>
                    <GroupBox Header="页面权限" Style="{x:Null}">
                        <StackPanel Orientation="Vertical">
                            <Button Margin="3" Content="添加权限" Command="{Binding AddCommand}" HorizontalAlignment="Left"></Button>
                            <DataGrid Grid.Row="1" x:Name="table" ItemsSource="{Binding PermissionList}" AutoGenerateColumns="False" >
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="权限名" >
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Name}" FontSize="11" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsReadOnly}" BorderThickness="0" FontSize="11"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="权限值(唯一)" >
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Value}" FontSize="11" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsReadOnly}" BorderThickness="0" FontSize="11"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="操作" Width="*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                                                        <Hyperlink Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                            CommandParameter="{Binding .}" Foreground="{DynamicResource MahApps.Brushes.Text}"> <TextBlock x:Name="txtEdit" Text="编辑" /> </Hyperlink>
                                                    </TextBlock>
                                                    <TextBlock Margin="10,0,0,0" VerticalAlignment="Center">
                                                        <Hyperlink Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                            CommandParameter="{Binding .}" Foreground="{DynamicResource MahApps.Brushes.Text}"> <TextBlock Text="删除" /> </Hyperlink>
                                                    </TextBlock>
                                                </StackPanel>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsReadOnly}" Value="False">
                                                        <Setter TargetName="txtEdit" Property="TextBlock.Text" Value="确定"/>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </ScrollViewer>
        </Border>
        <StackPanel Grid.Row="1"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right" 
                        Margin="10,0">
            <Button x:Name="PART_AffirmativeButton"
                    VerticalAlignment="Center"
                    Content="确定"
                    Margin="0 0 5 0" />
            <Button x:Name="PART_NegativeButton"
                    VerticalAlignment="Center"
                    Content="取消"
                    Margin="5 0 5 0" />
        </StackPanel>
    </Grid>
</ac:ChildWindow>