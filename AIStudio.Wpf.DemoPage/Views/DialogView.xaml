<UserControl x:Class="AIStudio.Wpf.DemoPage.Views.DialogView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AIStudio.Wpf.DemoPage.Views"
        xmlns:util="https://astudio.github.io/utilcontrol" 
        xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
        mc:Ignorable="d" 
        d:DesignHeight="450" d:DesignWidth="800">
    <TabControl>
        <TabItem Header="util">
            <WrapPanel>
                <smtx:XamlDisplay  Key="dialog_1" Margin="2">
                    <Button Margin="3" Command="{Binding ShowMessageBoxCommand}">弹出对话框</Button>
                    <smtx:XamlDisplay.Xaml>
                        await Msg.Question("test");
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
                <smtx:XamlDisplay  Key="dialog_2" Margin="2">
                    <Button Margin="3" Command="{Binding ShowWaitingBoxCommand1}">弹出等待框1</Button>
                    <smtx:XamlDisplay.Xaml>
                        var control = WindowBase.ShowWaiting(WaitingType.Progress, "RootWindow");
                control.CanPercent = true;
                        <!--for (int i = 0; i <10; i++)
                {
                    await Task.Delay(1000);
                    control.Percent += 0.1;
                }-->
                        WindowBase.HideWaiting("RootWindow");
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
                <smtx:XamlDisplay  Key="dialog_3" Margin="2">
                    <Button Margin="3" Command="{Binding ShowWaitingBoxCommand2}">弹出等待框2</Button>
                    <smtx:XamlDisplay.Xaml>
                        var control = WindowBase.ShowWaiting(WaitingType.Progress, "RootWindow");
                control.CanPercent = true;
                        <!--for (int i = 0; i <10; i++)
                {
                    await Task.Delay(1000);
                    control.Percent += 0.1;
                }-->
                        WindowBase.HideWaiting("RootWindow");
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
                <smtx:XamlDisplay  Key="dialog_4" Margin="2">
                    <Button Margin="3" Command="{Binding ShowWaitingBoxCommand3}">弹出等待框3</Button>
                    <smtx:XamlDisplay.Xaml>
                        var control = WindowBase.ShowWaiting(WaitingType.Progress, "RootWindow");
                control.CanPercent = true;
                        <!--for (int i = 0; i <10; i++)
                {
                    await Task.Delay(1000);
                    control.Percent += 0.1;
                }-->
                        WindowBase.HideWaiting("RootWindow");
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
                <smtx:XamlDisplay  Key="dialog_5" Margin="2">
                    <Button Margin="3" Command="{Binding ShowMessageQueueCommand}">弹出提示语句</Button>
                    <smtx:XamlDisplay.Xaml>
                        WindowBase.ShowMessageQueue("Welcome to Material Design In XAML Tookit", "RootWindow");
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
                <smtx:XamlDisplay  Key="dialog_6" Margin="2">
                    <Button Margin="3" Command="{Binding ShowFlyoutCommand}">显示侧边窗</Button>
                    <smtx:XamlDisplay.Xaml>
                        var flyout = new DynamicFlyout
                {
                    Header = "Dynamic flyout"
                };
                WindowBase.ShowFlyout(flyout, "RootWindow");
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
                <smtx:XamlDisplay  Key="dialog_7" Margin="2">
                    <Button Margin="3" Command="{Binding ShowDialogCommand}">显示对话框</Button>
                    <smtx:XamlDisplay.Xaml>
                        var dialog = new DialogTest();
                var res = await WindowBase.ShowDialogAsync(dialog, "RootWindow");
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
                <smtx:XamlDisplay  Key="dialog_8" Margin="2">
                    <Button Margin="3" Command="{Binding ShowNormalModalWindowCommand}">普通模式弹框</Button>
                    <smtx:XamlDisplay.Xaml>
                        var win = new WindowTest();
                WindowHelper.ShowDialog(Application.Current.MainWindow, win);
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
                <smtx:XamlDisplay  Key="dialog_9" Margin="2">
                    <Button Margin="3" Command="{Binding ShowNormalWindowCommand}">普通弹框</Button>
                    <smtx:XamlDisplay.Xaml>
                        var win = new WindowTest();
                WindowHelper.Show(Application.Current.MainWindow, win);
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
                <smtx:XamlDisplay  Key="dialog_10" Margin="2">
                    <Button Margin="3" Command="{Binding ShowNoticeWindowCommand}">消息通知</Button>
                    <smtx:XamlDisplay.Xaml>
                        Notice.Show("This is a notice.This is a notice.This is a notice.This is a notice.This is a notice.This is a notice.", "Notice", 3, MessageBoxIcon.Error);
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
            </WrapPanel>
        </TabItem>
         <TabItem Header="hand" IsSelected="True">
            <WrapPanel>               
                <Button Margin="3" Command="{Binding ShowHandyMainWindowCommand}">handy窗口</Button>
                <smtx:XamlDisplay  Key="dialog_20" Margin="2">
                    <Button Margin="3" Command="{Binding ShowMessageBoxWindowCommand}">MessageBox</Button>
                    <smtx:XamlDisplay.Xaml>
                        Util.Controls.Windows.MessageBoxWindow.Show("GrowlAsk", "Title", MessageBoxButton.YesNo, MessageBoxImage.Question);
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
            </WrapPanel>
        </TabItem>
        <TabItem Header="xceed" >
            <WrapPanel>
                <smtx:XamlDisplay  Key="dialog_21" Margin="2">
                    <Button Margin="3" Command="{Binding ShowXceedMessageBoxCommand}">MessageBox</Button>
                    <smtx:XamlDisplay.Xaml>
                        Util.Controls.MessageBox.Show("GrowlAsk", "Title", MessageBoxButton.YesNo, MessageBoxImage.Question);
                    </smtx:XamlDisplay.Xaml>
                </smtx:XamlDisplay>
            </WrapPanel>
        </TabItem>
    </TabControl>
   
</UserControl>
