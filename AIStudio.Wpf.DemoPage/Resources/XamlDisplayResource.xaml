<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:util="https://astudio.github.io/utilcontrol"
                    xmlns:helper="clr-namespace:AIStudio.Wpf.DemoPage.Helper"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:showMeTheXaml="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
                    xmlns:smtxAe="clr-namespace:ShowMeTheXAML.AvalonEdit;assembly=ShowMeTheXAML.AvalonEdit"
                    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ShowMeTheXAML.AvalonEdit;component/Themes/xamldisplayer.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="showMeTheXaml:XamlDisplay" BasedOn="{StaticResource {x:Type showMeTheXaml:XamlDisplay}}">
        <Style.Resources>
            <ResourceDictionary>
                <smtxAe:TextDocumentValueConverter x:Key="TextDocumentValueConverter"/>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="helper:XamlDisplayEx.ButtonDock" Value="Right" />
        <Setter Property="Formatter">
            <Setter.Value>
                <showMeTheXaml:XamlFormatter NewLineOnAttributes="True" Indent="  ">
                    <showMeTheXaml:XamlFormatter.NamespacesToRemove>
                        <system:String>http://materialdesigninxaml.net/winfx/xaml/themes</system:String>
                    </showMeTheXaml:XamlFormatter.NamespacesToRemove>
                </showMeTheXaml:XamlFormatter>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="showMeTheXaml:XamlDisplay">
                    <DockPanel>
                        <util:PopupBox DockPanel.Dock="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helper:XamlDisplayEx.ButtonDock)}"
                                                         Padding="10" StaysOpen="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                         x:Name="PopupBox">
                            <util:PopupBox.ToggleContent>
                                <util:PackIcon Kind="Xaml" Cursor="Hand" ToolTip="View XAML" 
                                                                 Foreground="{DynamicResource AccentColorBrush}" 
                                                                 Background="Transparent" 
                                                                 Margin="3">
                                    <util:PackIcon.Style>
                                        <Style TargetType="util:PackIcon" BasedOn="{StaticResource {x:Type util:PackIcon}}">
                                            <Setter Property="Opacity" Value="0.2" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Opacity" Value="1" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </util:PackIcon.Style>
                                </util:PackIcon>
                            </util:PopupBox.ToggleContent>
                            <Border MaxHeight="600" MaxWidth="800">
                                <StackPanel>
                                    <avalonEdit:TextEditor Document="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextDocumentValueConverter}}" 
                                                                   Style="{StaticResource AvalonTextEditorXamlDisplay}" />
                                    <Button
                                                Margin="0 10 0 0"
                                                Tag="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}}"
                                                HorizontalAlignment="Right"
                                                Command="Copy"
                                                CommandParameter="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}}"
                                                Content="_COPY"
                                                Style="{StaticResource RaisedButton}">
                                    </Button>
                                </StackPanel>
                            </Border>

                        </util:PopupBox>
                        <Grid>
                            <AdornerDecorator>
                                <Border BorderBrush="{DynamicResource AccentColorBrush}" Opacity=".4" Margin="-5">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=PopupBox, Path=IsPopupOpen}" Value="True">
                                                    <Setter Property="BorderThickness" Value="5" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                            </AdornerDecorator>
                            <ContentPresenter />
                        </Grid>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>