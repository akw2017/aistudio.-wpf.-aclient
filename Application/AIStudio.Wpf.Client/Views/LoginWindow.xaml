<util:WindowBase
    x:Class="AIStudio.Wpf.Client.Views.LoginWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:AIStudio.Core.Converters;assembly=AIStudio.Core"
    xmlns:core="clr-namespace:AIStudio.Core;assembly=AIStudio.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:AIStudio.Wpf.Client"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:util="clr-namespace:Util.Controls;assembly=Util.Controls"
    x:Name="loginWin"
    Title="{x:Static core:LocalSetting.Title}"
    Width="700"
    Height="400"
    prism:ViewModelLocator.AutoWireViewModel="True"
    util:WindowBase.TitleTag="true"
    Background="Transparent"
    OpacityMask="{DynamicResource MahApps.Brushes.ThemeBackground}"
    ResizeMode="CanMinimize"
    WindowStyle="None"
    mc:Ignorable="d">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="-1" />
    </WindowChrome.WindowChrome>
    <Grid>
        <Border  Panel.ZIndex="1"
            Background="White"
            BorderThickness="0"
            CornerRadius="15"
            Visibility="{Binding LoginStatus, Converter={converter:StringToVisibilityConverter}, ConverterParameter='Input'}">
            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid x:Name="LoginGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="70" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>

                    <Grid
                        Grid.Row="1"
                        Width="250"
                        Margin="0,0,0,0"
                        KeyboardNavigation.TabNavigation="Cycle">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <ComboBox
                            Grid.Row="0"
                            Height="30"
                            IsEditable="True"
                            IsEnabled="True"
                            ItemsSource="{Binding Servers}"
                            Style="{StaticResource UnderlineComboBox}"
                            TabIndex="1"
                            Text="{Binding ServerIP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}">
                            <util:ControlAttachProperty.LabelTemplate>
                                <ControlTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                            Cursor="Arrow"
                                            Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                            Style="{StaticResource FIcon}"
                                            Text="&#xe670;" />
                                    </StackPanel>
                                </ControlTemplate>
                            </util:ControlAttachProperty.LabelTemplate>
                        </ComboBox>


                        <ComboBox
                            Grid.Row="1"
                            Height="30"
                            DisplayMemberPath="UserName"
                            IsEditable="True"
                            IsEnabled="True"
                            ItemsSource="{Binding LoginInfo}"
                            SelectedValuePath="UserName"
                            Style="{StaticResource UnderlineComboBox}"
                            TabIndex="1"
                            Text="{Binding UserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}">
                            <util:ControlAttachProperty.LabelTemplate>
                                <ControlTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                            Cursor="Arrow"
                                            Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                            Style="{StaticResource FIcon}"
                                            Text="&#xe656;" />
                                    </StackPanel>
                                </ControlTemplate>
                            </util:ControlAttachProperty.LabelTemplate>
                        </ComboBox>


                        <PasswordBox
                            Grid.Row="2"
                            Height="30"
                            core:PasswordBoxHelper.Password="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            util:ControlAttachProperty.Watermark="密 码"
                            Style="{StaticResource UnderlinePasswordBox}"
                            TabIndex="2">
                            <util:ControlAttachProperty.LabelTemplate>
                                <ControlTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                            Cursor="Arrow"
                                            Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                            Style="{StaticResource FIcon}"
                                            Text="&#xe614;" />
                                    </StackPanel>
                                </ControlTemplate>
                            </util:ControlAttachProperty.LabelTemplate>
                        </PasswordBox>
                        <CheckBox
                            Grid.Row="3"
                            VerticalAlignment="Center"
                            Content="记住密码"
                            IsChecked="{Binding IsRmembered}"
                            TabIndex="3" />
                        <Button
                            Grid.Row="4"
                            Height="30"
                            Command="{Binding LoginCommand}"
                            CommandParameter="{Binding ElementName=loginWin}"
                            Content="登录"
                            IsDefault="True"
                            Foreground="{DynamicResource MahApps.Brushes.SystemControlBackgroundChromeWhite}"
                            Style="{DynamicResource RaisedButton}"
                            TabIndex="4" Cursor="Hand" />
                    </Grid>
                    <TextBlock
                        Grid.Row="2"
                        HorizontalAlignment="Center"
                        Foreground="Red"
                        Text="{Binding LoginError}" />
           
                </Grid>

                <Border
                    Grid.Column="1"
                    Background="{DynamicResource MahApps.Brushes.Accent}"
                    CornerRadius="0,15,15,0">
                    <Image  Source="pack://application:,,,/AIStudio.Resource;component/Images/loginBackGround.png" />
                </Border>

                <TextBlock
                        Grid.Column="1"
                        Margin="10"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Text="{Binding Version}"
                        Foreground="{DynamicResource MahApps.Brushes.SystemControlBackgroundChromeWhite}"/>
            </Grid>
        </Border>
        <Grid x:Name="VerifyGrid"  >
            <util:SliderVerify x:Name="Slider" Visibility="{Binding LoginStatus, Converter={converter:StringToVisibilityConverter}, ConverterParameter='Slider'}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ResultChanged">
                        <i:InvokeCommandAction Command="{Binding ResultChangedComamnd}" CommandParameter="{Binding Path=Result, ElementName=Slider}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </util:SliderVerify>
            <util:TextClickVerify x:Name="TextClick" Visibility="{Binding LoginStatus, Converter={converter:StringToVisibilityConverter}, ConverterParameter='TextClick'}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ResultChanged">
                        <i:InvokeCommandAction Command="{Binding ResultChangedComamnd}" CommandParameter="{Binding Path=Result, ElementName=TextClick}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </util:TextClickVerify>
            <util:TextClickVerify x:Name="EmojiClick" Visibility="{Binding LoginStatus, Converter={converter:StringToVisibilityConverter}, ConverterParameter='EmojiClick'}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ResultChanged">
                        <i:InvokeCommandAction Command="{Binding ResultChangedComamnd}" CommandParameter="{Binding Path=Result, ElementName=EmojiClick}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </util:TextClickVerify>
            <util:TextClickVerify x:Name="IdiomsClick" Visibility="{Binding LoginStatus, Converter={converter:StringToVisibilityConverter}, ConverterParameter='IdiomsClick'}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ResultChanged">
                        <i:InvokeCommandAction Command="{Binding ResultChangedComamnd}" CommandParameter="{Binding Path=Result, ElementName=IdiomsClick}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </util:TextClickVerify>
            <util:DragVerify x:Name="Drag" Visibility="{Binding LoginStatus, Converter={converter:StringToVisibilityConverter}, ConverterParameter='Drag'}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ResultChanged">
                        <i:InvokeCommandAction Command="{Binding ResultChangedComamnd}" CommandParameter="{Binding Path=Result, ElementName=Drag}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </util:DragVerify>
        </Grid>
    </Grid>
</util:WindowBase>
