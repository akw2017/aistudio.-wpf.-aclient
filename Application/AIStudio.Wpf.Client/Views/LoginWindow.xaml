<util:WindowBase x:Class="AIStudio.Wpf.Client.Views.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AIStudio.Wpf.Client"
        xmlns:core="clr-namespace:AIStudio.Core;assembly=AIStudio.Core"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        xmlns:util="clr-namespace:Util.Controls;assembly=Util.Controls"    
        xmlns:converter="clr-namespace:AIStudio.Core.Converters;assembly=AIStudio.Core"
        Style="{StaticResource BaseWindowStyle}"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        MaxboxEnable ="False"
        MinboxEnable="False"
        x:Name="loginWin"
        Title="{x:Static core:LocalSetting.Title}" Height="288" Width="450">
    <Grid>
        <Grid x:Name="LoginGrid" Visibility="{Binding LoginStatus,Converter={converter:StringToVisibilityConverter},ConverterParameter='Input'}">           
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="1" Width="250" Margin="0,0,0,0" KeyboardNavigation.TabNavigation="Cycle">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBox Grid.Row="0" Height="30" util:ControlAttachProperty.Watermark="服务器" Style="{StaticResource UnderlineTextBox}" TabIndex="0"
                             Text="{Binding ServerIP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                         Visibility="{Binding ServerIPVisibility}">
                    <util:ControlAttachProperty.LabelTemplate>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xe670;" Style="{StaticResource FIcon}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Cursor="Arrow" />
                            </StackPanel>
                        </ControlTemplate>
                    </util:ControlAttachProperty.LabelTemplate>
                </TextBox>

                <ComboBox Grid.Row="1" Height="30" IsEditable="True" IsEnabled="True" TabIndex="1"
                      ItemsSource="{Binding LoginInfo}" 
                      Text="{Binding UserName,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                      Style="{StaticResource UnderlineComboBox}" SelectedValuePath="UserName" DisplayMemberPath="UserName" >
                    <util:ControlAttachProperty.LabelTemplate>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xe656;" Style="{StaticResource FIcon}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Cursor="Arrow"/>
                            </StackPanel>
                        </ControlTemplate>
                    </util:ControlAttachProperty.LabelTemplate>
                </ComboBox>


                <PasswordBox Grid.Row="2" Height="30" util:ControlAttachProperty.Watermark="密 码" Style="{StaticResource UnderlinePasswordBox}" TabIndex="2" 
                                 core:PasswordBoxHelper.Password="{Binding Password,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" >
                    <util:ControlAttachProperty.LabelTemplate>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xe614;" Style="{StaticResource FIcon}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Cursor="Arrow"/>
                            </StackPanel>
                        </ControlTemplate>
                    </util:ControlAttachProperty.LabelTemplate>
                </PasswordBox>
                <CheckBox Grid.Row="3" Content="记住密码" VerticalAlignment="Center" IsChecked="{Binding IsRmembered}" TabIndex="3"/>
                <Button Grid.Row="4" Height="30" Content="登录" Command="{Binding LoginCommand}" CommandParameter="{Binding ElementName=loginWin}" Style="{DynamicResource RaisedButton}" IsDefault="True" TabIndex="4"/>
            </Grid>
            <TextBlock Grid.Row="2" Text="{Binding LoginError}" HorizontalAlignment="Center" Foreground="Red"/>
            <TextBlock  Grid.Row="3" Text="{Binding Version}" HorizontalAlignment="Left"/>           
        </Grid>
        <Grid x:Name="VerifyGrid">
            <util:SliderVerify x:Name="Slider" Height="288" Width="450" Visibility="{Binding LoginStatus,Converter={converter:StringToVisibilityConverter},ConverterParameter='Slider'}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ResultChanged">
                        <i:InvokeCommandAction Command="{Binding ResultChangedComamnd}" CommandParameter="{Binding Path=Result,ElementName=Slider}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </util:SliderVerify>
            <util:TextClickVerify x:Name="TextClick" Height="288" Width="450" Visibility="{Binding LoginStatus,Converter={converter:StringToVisibilityConverter},ConverterParameter='TextClick'}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ResultChanged">
                        <i:InvokeCommandAction Command="{Binding ResultChangedComamnd}" CommandParameter="{Binding Path=Result,ElementName=TextClick}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </util:TextClickVerify>
            <util:TextClickVerify x:Name="EmojiClick" Height="288" Width="450" Visibility="{Binding LoginStatus,Converter={converter:StringToVisibilityConverter},ConverterParameter='EmojiClick'}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ResultChanged">
                        <i:InvokeCommandAction Command="{Binding ResultChangedComamnd}" CommandParameter="{Binding Path=Result,ElementName=EmojiClick}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </util:TextClickVerify>
            <util:TextClickVerify x:Name="IdiomsClick" Height="288" Width="450" Visibility="{Binding LoginStatus,Converter={converter:StringToVisibilityConverter},ConverterParameter='IdiomsClick'}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ResultChanged">
                        <i:InvokeCommandAction Command="{Binding ResultChangedComamnd}" CommandParameter="{Binding Path=Result,ElementName=IdiomsClick}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </util:TextClickVerify>
            <util:DragVerify x:Name="Drag" Height="288" Width="450" Visibility="{Binding LoginStatus,Converter={converter:StringToVisibilityConverter},ConverterParameter='Drag'}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ResultChanged">
                        <i:InvokeCommandAction Command="{Binding ResultChangedComamnd}" CommandParameter="{Binding Path=Result,ElementName=Drag}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </util:DragVerify>            
        </Grid>
    </Grid>
</util:WindowBase>
